/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ebi-metagenomics/genomes-generation Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    dbs                          = "databases"

    ena_assembly_study_accession = ""
    metagenome                   = ""
    biomes                       = ""

    // for genomes_uploader
    centre_name                = ""
    upload_tpa                 = true
    upload_force               = false
    upload_mags                = true
    // not supported yet
    upload_bins                = false

    upload_bins                = false

    // Input
    samplesheet                = ""
    
    // Feature flags
    skip_preprocessing_input   = false
    skip_decontamination       = false
    merge_pairs                = false
    skip_prok                  = false
    skip_euk                   = false
    xlarge                     = false

    min_contig_size            = 1500
    metabat2_rng_seed          = 1

    // Reference databases
    busco_db                   = ""
    cat_db_folder              = ""
    cat_diamond_db             = ""
    cat_taxonomy_db            = ""
    checkm2_db                 = ""
    eukcc_db                   = ""
    gunc_db                    = ""
    gtdbtk_db                  = ""
    ref_genome                 = ""
    rfam_rrna_models           = ""

    // dRep Euks args
    euk_drep_args              = "-pa 0.80 -sa 0.99 -nc 0.40 -cm larger -comp 49 -con 21"
    euk_drep_args_mags         = "-pa 0.80 -sa 0.95 -nc 0.40 -cm larger -comp 49 -con 21"

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    multiqc_methods_description = null

    // Boilerplate options
    publish_dir_mode           = 'copy'
    help                       = false
    version                    = false
    monochrome_logs            = false

    // Schema validation default options
    validationFailUnrecognisedParams = false
    validationLenientMode            = false
    validationSchemaIgnoreParams     = ''
    validationShowHiddenParams       = false
    validate_params                  = true
}

includeConfig 'config/base.config'

// On a successful completion of a run all files in work directory are automatically deleted.
cleanup = true

profiles {
    singularity {
       enabled = true
       autoMounts = true
       cacheDir = params.singularity_cachedir
       registry = 'quay.io'
    }
    docker {
        enabled = true
        autoMounts = true
        registry = 'quay.io'
        userEmulation = true
        runOptions = "--platform linux/x86_64"
    }

    lsf {
        workDir = params.workdir
        params.databases = params.dbs
        executor {
            name = "lsf"
            queueSize = 200
        }
        params.cloudProcess = true
        process.cache = "lenient"
    }

    slurm {
        workDir = params.workdir
        params.databases = params.dbs
        executor {
            name = "slurm"
            queueSize = 200
        }
        params.cloudProcess = true
        process.cache = "lenient"
    }

    local {
         docker {
            enabled = true
            autoMounts = true
            registry = 'quay.io'
            runOptions = "--platform linux/x86_64"
        }
        executor {
            name = "local"
            cpus = 4
            memory = '10 GB'
        }
        includeConfig 'config/local.config'
    }
}

includeConfig 'config/modules.config'

// Set default registry for Apptainer, Podman and independent of -profile
apptainer.registry   = 'quay.io'
podman.registry      = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'ebi-metagenomics/genomes-generation'
    author          = """Microbiome Informatics team"""
    homePage        = 'https://github.com/ebi-metagenomics/genomes-generation'
    description     = """Microbiome Informatics MAGs generation pipeline"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.1.1'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.1.1' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
}